{"version":3,"file":"sparky.js","sources":["../node_modules/nanoid/non-secure/index.js","../node_modules/mdn-polyfills/Array.from.js","../node_modules/mdn-polyfills/Array.prototype.find.js","../src/sparky.dom.ts","../src/polyfill/isConnected.ts","../src/sparky.eventmanager.ts","../node_modules/mdn-polyfills/String.prototype.startsWith.js","../src/sparky.context.ts","../src/sparky.component.ts","../src/sparky.event.ts","../src/sparky.ts"],"sourcesContent":["// This alphabet uses a-z A-Z 0-9 _- symbols.\n// Symbols are generated for smaller size.\n// -_zyxwvutsrqponmlkjihgfedcba9876543210ZYXWVUTSRQPONMLKJIHGFEDCBA\nvar url = '-_'\n// Loop from 36 to 0 (from z to a and 9 to 0 in Base36).\nvar i = 36\nwhile (i--) {\n  // 36 is radix. Number.prototype.toString(36) returns number\n  // in Base36 representation. Base36 is like hex, but it uses 0â€“9 and a-z.\n  url += i.toString(36)\n}\n// Loop from 36 to 10 (from Z to A in Base36).\ni = 36\nwhile (i-- - 10) {\n  url += i.toString(36).toUpperCase()\n}\n\n/**\n * Generate URL-friendly unique ID. This method use non-secure predictable\n * random generator with bigger collision probability.\n *\n * @param {number} [size=21] The number of symbols in ID.\n *\n * @return {string} Random string.\n *\n * @example\n * const nanoid = require('nanoid/non-secure')\n * model.id = nanoid() //=> \"Uakgb_J5m9g-0JDMbcJqL\"\n *\n * @name nonSecure\n * @function\n */\nmodule.exports = function (size) {\n  var id = ''\n  i = size || 21\n  // Compact alternative for `for (var i = 0; i < size; i++)`\n  while (i--) {\n    // `| 0` is compact and faster alternative for `Math.floor()`\n    id += url[Math.random() * 64 | 0]\n  }\n  return id\n}\n","!function(){var t,u,e,c;Array.from||(Array.from=(t=Object.prototype.toString,u=function(r){return\"function\"==typeof r||\"[object Function]\"===t.call(r)},e=Math.pow(2,53)-1,c=function(r){var t,n=(t=Number(r),isNaN(t)?0:0!==t&&isFinite(t)?(0<t?1:-1)*Math.floor(Math.abs(t)):t);return Math.min(Math.max(n,0),e)},function(r){var t=Object(r);if(null==r)throw new TypeError(\"Array.from requires an array-like object - not null or undefined\");var n,e=1<arguments.length?arguments[1]:void 0;if(void 0!==e){if(!u(e))throw new TypeError(\"Array.from: when provided, the second argument must be a function\");2<arguments.length&&(n=arguments[2])}for(var o,a=c(t.length),i=u(this)?Object(new this(a)):new Array(a),f=0;f<a;)o=t[f],i[f]=e?void 0===n?e(o,f):e.call(n,o,f):o,f+=1;return i.length=a,i}))}();\n","Array.prototype.find||(Array.prototype.find=function(r){if(null==this)throw new TypeError(\"Array.prototype.find called on null or undefined\");if(\"function\"!=typeof r)throw new TypeError(\"predicate must be a function\");for(var t=Object(this),n=t.length>>>0,o=arguments[1],e=void 0,i=0;i<n;i++)if(e=t[i],r.call(o,e,i,t))return e});\n","let currentDom: HTMLElement = null;\r\n\r\nexport function getCurrentDom() {\r\n    return currentDom;\r\n}\r\n\r\nexport function setCurrentDom(dom: HTMLElement) {\r\n    currentDom = dom;\r\n}\r\n\r\nexport function reconciliate(currentDom: HTMLElement, nextDom: HTMLElement) {\r\n    if (!nextDom) return null;\r\n    if (!currentDom && nextDom) return nextDom;\r\n    if (currentDom.isEqualNode(nextDom)) return currentDom;\r\n    if (currentDom.nodeName !== nextDom.nodeName) return nextDom;\r\n\r\n    const domQueue: [Node, Node][] = [[currentDom, nextDom]];\r\n\r\n    while(domQueue.length > 0) {\r\n        const [currentElem, nextElem] = domQueue.shift();\r\n        const removedList: Node[] = [];\r\n        reconciliateAttribute(currentElem as HTMLElement, nextElem as HTMLElement);\r\n\r\n        const nextElemChildren = nextElem.childNodes;\r\n        currentElem.childNodes.forEach((node, i) => {\r\n            const nextNode = nextElemChildren.item(i);\r\n\r\n            if(!nextNode) {\r\n                removedList.push(node)\r\n                return;\r\n            }\r\n\r\n            if(node.isEqualNode(nextNode)) return;\r\n\r\n            if(node.nodeName !== nextNode.nodeName) {\r\n                currentElem.replaceChild(nextNode.cloneNode(true), node);\r\n                return;\r\n            }\r\n\r\n            if(node.nodeName == \"#text\" && node.textContent !== nextNode.textContent) {\r\n                node.textContent = nextNode.textContent;\r\n                return;\r\n            }\r\n\r\n            domQueue.push([node, nextNode])\r\n        });\r\n\r\n        for(let i = currentElem.childNodes.length; i < nextElem.childNodes.length; i++) {\r\n            const childNode = nextElem.childNodes.item(i);\r\n            currentElem.appendChild(childNode.cloneNode(true))\r\n        }\r\n\r\n        removedList.forEach((rmElem) => {\r\n            currentElem.removeChild(rmElem)\r\n        })\r\n\r\n    }\r\n\r\n    return currentDom;\r\n}\r\n\r\nfunction reconciliateAttribute(currentElem: HTMLElement, nextElem: HTMLElement) {\r\n    if(!currentElem.attributes || !nextElem.attributes) return;\r\n\r\n    const sortedCurrentAttributes = Array.from(currentElem.attributes).sort((attr, attr2) => attributeSort(attr, attr2))\r\n    const sortedNextAttributes = Array.from(nextElem.attributes).sort((attr, attr2) => attributeSort(attr, attr2))\r\n\r\n    const removedAttr: Attr[] = [];\r\n\r\n    sortedCurrentAttributes.forEach((attr, i) => {\r\n        const nextAttr = sortedNextAttributes[i];\r\n\r\n        if(!nextAttr) {\r\n            removedAttr.push(attr);\r\n            return;\r\n        }\r\n        \r\n        if(attr.name !== nextAttr.name) {\r\n            removedAttr.push(attr);\r\n            currentElem.setAttribute(nextAttr.name, nextAttr.value);\r\n            return;\r\n        }\r\n\r\n        if(attr.value !== nextAttr.value) {\r\n            attr.value = nextAttr.value;\r\n        }\r\n    })\r\n\r\n    for(let i = sortedCurrentAttributes.length; i < sortedNextAttributes.length; i++) {\r\n        const nextAttr = sortedNextAttributes[i];\r\n        currentElem.setAttribute(nextAttr.name, nextAttr.value);\r\n    }\r\n\r\n    removedAttr.forEach(attr => currentElem.removeAttribute(attr.name))\r\n}\r\n\r\nfunction attributeSort(a: Attr, b: Attr) {\r\n    return (a.name < b.name ? -1 : (a.name > b.name ? 1 : 0));\r\n}\r\n","/*\r\n * Node.isConnected polyfill for IE and EdgeHTML\r\n * 2020-02-04\r\n *\r\n * By Eli Grey, https://eligrey.com\r\n * Public domain.\r\n * NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\r\n */\r\nexport function isConnectedPolyfill() {\r\n    if (!('isConnected' in Node.prototype)) {\r\n        Object.defineProperty(Node.prototype, 'isConnected', {\r\n        get() {\r\n            return (\r\n            !this.ownerDocument ||\r\n            !(\r\n                this.ownerDocument.compareDocumentPosition(this) &\r\n                this.DOCUMENT_POSITION_DISCONNECTED\r\n            )\r\n            );\r\n        },\r\n        });\r\n    }    \r\n}\r\n","import { isConnectedPolyfill } from \"./polyfill/isConnected\"\r\n\r\nisConnectedPolyfill();\r\n\r\nexport interface eventListSingle {\r\n    dom: HTMLElement;\r\n    type: string;\r\n    callbackFn: eventCallbackFn;\r\n}\r\n\r\nexport type eventCallbackFn = (evt: Event) => void;\r\n\r\nexport class EventManager {\r\n    static oldEventType: string[] = [];\r\n    static eventList: eventListSingle[] = [];\r\n    static eventListType: string[] = [];\r\n\r\n    static listen() {\r\n        EventManager.removeUnusedEvents();\r\n        this.eventList.forEach((event) => {\r\n            const { type } = event;\r\n            if(!this.isEventTypeListening(type)) {\r\n                document.addEventListener(type, (event) => this.dispatchEvent(event))\r\n                this.eventListType.push(type);\r\n            }\r\n        });\r\n    }\r\n\r\n    static dispatchEvent(event: Event) {\r\n        this.eventList.find((evtList) => {\r\n            if(this.isEventTarget(evtList, event)) {\r\n                if(evtList.type === event.type) {\r\n                    evtList.callbackFn(event);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    static addEvent(eventSingle: eventListSingle) {\r\n        const {dom, type, callbackFn} = eventSingle;\r\n        this.eventList.push({ dom, type, callbackFn });\r\n    }\r\n\r\n    private static removeUnusedEvents() {\r\n        this.eventList = this.eventList\r\n            .filter((evt) => evt.dom.isConnected);\r\n    }\r\n\r\n    private static isEventTypeListening(type: string) {\r\n        return this.eventListType.find(t => t == type);\r\n    }\r\n\r\n    private static isEventTarget(evtList: eventListSingle, event: Event) {\r\n        return (evtList.dom === event.target) || evtList.dom.contains(event.target as HTMLElement);\r\n    }\r\n}","String.prototype.startsWith||(String.prototype.startsWith=function(t,r){return r=r||0,this.substr(r,t.length)===t});\n","import { ISparkySelf } from \"./sparky.function.helper\";\r\n\r\nconst emptyContext = {\r\n    __root: null,\r\n    props: {},\r\n    state: {},\r\n    cachedMemo: [],\r\n    cachedUpdate: [],\r\n    indexes: {\r\n        memo: 0,\r\n        update: 0\r\n    },\r\n    renderFunc: null\r\n};\r\n\r\nexport class SparkyContext {\r\n    private static __context: ISparkySelf\r\n    private static __defaultContext : ISparkySelf = emptyContext\r\n\r\n    public static getCurrentContext() {\r\n        return this.__context;\r\n    }\r\n\r\n    public static setCurrentContext(newContext: ISparkySelf) {\r\n        this.__context = newContext;\r\n    }\r\n\r\n    public static resetIndexes() {\r\n        if(!this.__context) throw new ReferenceError(\"Try to reset index on a undefined context\");\r\n        this.__context.indexes.memo = 0;\r\n        this.__context.indexes.update = 0;\r\n    }\r\n\r\n    public static newContext(newContext: ISparkySelf) : ISparkySelf {\r\n        return {...this.__defaultContext, ...newContext};\r\n    }\r\n}","import { IRenderReturn, ISparkyComponent, Sparky } from \"./sparky\";\r\nimport { findEvent } from \"./sparky.event\";\r\nimport { EventManager, eventCallbackFn } from \"./sparky.eventmanager\";\r\nimport { SparkyContext } from \"./sparky.context\";\r\n\r\ninterface ICachedComponent {\r\n    component: ISparkyComponent,\r\n    dom: HTMLElement\r\n}\r\n\r\nexport class SparkyComponent {\r\n    private static cachedComponent: ICachedComponent[][] = [];\r\n    static populate(render: IRenderReturn, rootComponent: ISparkyComponent) {\r\n        \r\n        const renderQueue = [render];\r\n\r\n        let depthHorizontal = 0;\r\n\r\n        while (renderQueue.length > 0) {\r\n            const currentRender = renderQueue.shift();\r\n            if(!this.cachedComponent[depthHorizontal]) this.cachedComponent[depthHorizontal] = [];\r\n\r\n            currentRender.func.forEach((currentFunc, index) => {\r\n                const currentEvent = findEvent(render.dom, currentRender.renderId, index);\r\n                const eventName = currentEvent.attr.name.replace(\"on\", \"\");\r\n                EventManager.addEvent({\r\n                    dom: currentEvent.dom,\r\n                    type: eventName,\r\n                    callbackFn: currentFunc.func as eventCallbackFn\r\n                })\r\n                currentEvent.dom.removeAttribute(currentEvent.attr.name)\r\n            })\r\n\r\n            currentRender.children.forEach((currentChild) => {\r\n                renderQueue.push(currentChild)\r\n            })\r\n\r\n            currentRender.nestedComponents.forEach((currentComp, index) => {\r\n                if(currentComp.type !== \"SparkyComponent\") return;\r\n                const cached = this.cachedComponent[depthHorizontal][index];\r\n                const commentDom = this.findComment(render.dom, currentRender.renderId, index, currentComp.renderFn.name);\r\n                if(cached) {\r\n                    if(cached.component.renderFn.name == \"\") {\r\n                        if(cached.component.renderFn.toString() == currentComp.renderFn.toString()) {\r\n                            currentComp = getCachedComponent(cached, currentComp);\r\n                        }\r\n                    } else if(cached.component.renderFn.name == currentComp.renderFn.name){\r\n                        currentComp = getCachedComponent(cached, currentComp);\r\n                    }\r\n                }\r\n                const renderChild = currentComp.renderFn(Object.freeze(currentComp.context.props));\r\n                if(!commentDom) return;\r\n                commentDom.parentNode.replaceChild(renderChild.dom, commentDom);\r\n                currentComp.context.__root = rootComponent;\r\n                render.func.push(...renderChild.func);\r\n                renderQueue.push(renderChild);\r\n\r\n                this.cachedComponent[depthHorizontal].push({\r\n                    component: currentComp,\r\n                    dom: renderChild.dom\r\n                })\r\n            });\r\n            depthHorizontal++;\r\n        }\r\n\r\n        return render.dom;\r\n    }\r\n\r\n    private static findComment(element: HTMLElement, renderId: string, i: number, componentName: string) {\r\n        const domQueue = [element];\r\n        while(domQueue.length > 0) {\r\n            const elem = domQueue.shift();\r\n            if(elem.nodeName == '#comment' && elem.nodeValue.trim() == `SparkyComponent#${componentName}#${i}#${renderId}`) {\r\n                return elem;\r\n            }\r\n\r\n            Array.from(elem.childNodes as NodeListOf<HTMLElement>).forEach((child) => {\r\n                domQueue.push(child)\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nfunction getCachedComponent(cached: ICachedComponent, currentComp: ISparkyComponent) {\r\n    SparkyContext.setCurrentContext(cached.component.context);\r\n    cached.component.context.props = currentComp.context.props;\r\n    currentComp = cached.component;\r\n    return currentComp;\r\n}\r\n","import 'mdn-polyfills/String.prototype.startsWith';\r\n\r\ninterface IEventReturn {\r\n    dom: HTMLElement;\r\n    attr: Attr;\r\n}\r\n\r\nexport function findEvent(element: HTMLElement, renderId: string, index: number) : IEventReturn {\r\n    const domQueue = [element];\r\n    while(domQueue.length > 0) {\r\n        const elem = domQueue.shift();\r\n        const eventAttr = Array.from(elem.attributes).find((attr) => {\r\n            if(attr.name.startsWith(\"on\")) {\r\n                return attr.value == `SparkyFunction#${renderId}#${index}`;\r\n            }\r\n        })\r\n\r\n        if(eventAttr) return {dom: elem, attr: eventAttr};\r\n        \r\n        Array.from(elem.children as HTMLCollectionOf<HTMLElement>).forEach((child) => {\r\n            domQueue.push(child)\r\n        })\r\n    }\r\n}","import nanoid from \"nanoid/non-secure\";\r\n\r\nimport 'mdn-polyfills/Array.from';\r\nimport 'mdn-polyfills/Array.prototype.find';\r\n\r\nimport { reconciliate, getCurrentDom, setCurrentDom } from \"./sparky.dom\";\r\nimport { EventManager } from \"./sparky.eventmanager\";\r\nimport { SparkyComponent } from \"./sparky.component\";\r\n\r\nimport { isConnectedPolyfill } from \"./polyfill/isConnected\"\r\nimport { ISparkySelf } from \"./sparky.function.helper\";\r\nimport { SparkyContext } from \"./sparky.context\";\r\n\r\n\r\nisConnectedPolyfill();\r\n\r\nexport interface IRenderReturn extends IReconciliateProps {\r\n    type: string;\r\n    nestedComponents: ISparkyComponent[];\r\n    children: IRenderReturn[];\r\n    renderId: string;\r\n}\r\n\r\nexport interface IReconciliateProps {\r\n    dom: HTMLElement,\r\n    func: ISparkyEventFunc[],\r\n}\r\n\r\nexport type ISelfFunction = (props?: any) => IRenderReturn;\r\n\r\nexport interface ISparkyEventFunc {\r\n    renderId: string;\r\n    index: number;\r\n    func: Function;\r\n}\r\n\r\nexport interface ISparkyComponent {\r\n    type: string;\r\n    context: ISparkySelf;\r\n    renderFn: ISelfFunction;\r\n}\r\n\r\nexport interface ISparkyProps {\r\n    [key: string]: any;\r\n}\r\n\r\nexport type ISparkyState = ISparkyProps;\r\n\r\nexport class Sparky {\r\n    public static _DEV_: boolean = true;\r\n\r\n    /**\r\n     * Generate a Sparky Component that can be mount.\r\n     * @param renderFunc The function that going to be execute to render html template\r\n     */\r\n    static component(renderFunc: ISelfFunction, props?: ISparkyProps) {\r\n        const sparkyContext = SparkyContext.newContext({props, renderFunc});\r\n        return { type: \"SparkyComponent\", context: sparkyContext, renderFn: renderFunc } as ISparkyComponent;\r\n    }\r\n\r\n    /**\r\n     * Mount a Sparky Component in the DOM Tree and keep it updated.\r\n     * @param component Sparky Component\r\n     * @param dom The dom element where you want to mount this component\r\n     */\r\n    static mount(component: ISparkyComponent, dom?: HTMLElement) {\r\n        if (Sparky._DEV_)\r\n            console.time();\r\n\r\n        const { context, renderFn } = component;\r\n        SparkyContext.setCurrentContext(context);\r\n        SparkyContext.resetIndexes();\r\n        const render = renderFn(Object.freeze(context.props)) as IRenderReturn;\r\n\r\n        render.dom = SparkyComponent.populate(render, component);\r\n\r\n        let finalDOM = reconciliate(getCurrentDom(), render.dom);\r\n        if (!finalDOM) return;\r\n        if (!finalDOM.isConnected && dom)\r\n            dom.appendChild(finalDOM);\r\n        EventManager.listen();\r\n\r\n        setCurrentDom(finalDOM as HTMLElement);\r\n\r\n        if (Sparky._DEV_)\r\n            console.timeEnd();\r\n    }\r\n\r\n    /**\r\n     * Reconciliate the current DOM with the new DOM Node\r\n     * @param oldNode Node that need to be reconcile\r\n     * @param newNode Node that have the new elements\r\n     */\r\n    static reconciliate(oldNode: HTMLElement, newNode: HTMLElement) {\r\n        return reconciliate(oldNode, newNode)\r\n    }\r\n}\r\n\r\n/**\r\n * Render the html string template to HTML elements\r\n * @param html Array of HTML String \r\n * @param computedProps Computed Props used to pass Javascript into template\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals\r\n */\r\nexport function render(html: TemplateStringsArray | string, ...computedProps: any[]): IRenderReturn {\r\n    const domNode = document.createElement(\"div\");\r\n    const func: ISparkyEventFunc[] = [];\r\n    const nestedComponents: ISparkyComponent[] = [];\r\n    const children: IRenderReturn[] = [];\r\n    const renderId = nanoid(12);\r\n\r\n    const newHTML = (typeof html == \"string\") ? html\r\n        : html.map((stringHTML, i) => {\r\n            let htmlLine = \"\"\r\n            htmlLine += stringHTML\r\n            if (!computedProps[i]) return htmlLine;\r\n            htmlLine = getComputedValue(computedProps, i, func, htmlLine, nestedComponents, children, renderId);\r\n            return htmlLine;\r\n        })\r\n\r\n    domNode.innerHTML = Array.isArray(newHTML) ? newHTML.join(\"\") : newHTML;\r\n\r\n    if (domNode.children.length > 1) {\r\n        throw new TypeError(\"The render HTML can only had one root node\");\r\n    }\r\n\r\n    return { type: \"SparkyRender\", dom: domNode.firstElementChild as HTMLElement, func, nestedComponents, children, renderId };\r\n}\r\n\r\nfunction getComputedValue(computedProps: any[], i: number, func: ISparkyEventFunc[], htmlLine: string, nestedComponents: ISparkyComponent[], children: IRenderReturn[], renderId: string) {\r\n    if (typeof computedProps[i] == \"function\") {\r\n        func.push({ index: func.length - 1, renderId, func: computedProps[i] });\r\n        htmlLine += `'SparkyFunction#${renderId}#${func.length - 1}'`;\r\n    }\r\n    else if (computedProps[i].type == \"SparkyRender\") {\r\n        const render = computedProps[i] as IRenderReturn;\r\n        htmlLine = renderSparkyObject(render, htmlLine);\r\n        children.push(render)\r\n    }\r\n    else if (computedProps[i].type == \"SparkyComponent\") {\r\n        const comp = computedProps[i] as ISparkyComponent;\r\n        htmlLine += `<!-- SparkyComponent#${comp.renderFn.name}#${nestedComponents.length}#${renderId} -->`;\r\n        nestedComponents.push(comp);\r\n    }\r\n    else {\r\n\r\n        computedProps[i] = Array.isArray(computedProps[i]) ?\r\n            computedProps[i].join(\"\") : new String(computedProps[i]);\r\n        if ((computedProps[i] as string).startsWith(\"<\"))\r\n            htmlLine += computedProps[i];\r\n        else\r\n            htmlLine += `<span class='computed'>${computedProps[i]}</span>`;\r\n    }\r\n    return htmlLine;\r\n}\r\n\r\nfunction renderSparkyObject(render: IRenderReturn, htmlLine: string) {\r\n    const div = document.createElement(\"div\");\r\n    div.appendChild(render.dom);\r\n    htmlLine += div.innerHTML;\r\n    return htmlLine;\r\n}\r\n"],"names":["url","i","toString","toUpperCase","t","u","e","c","Array","from","Object","prototype","r","call","Math","pow","n","Number","isNaN","isFinite","floor","abs","min","max","TypeError","arguments","length","o","a","this","f","find","currentDom","reconciliate","nextDom","isEqualNode","nodeName","domQueue","_a","currentElem","nextElem","removedList","attributes","sortedCurrentAttributes","sort","attr","attr2","attributeSort","sortedNextAttributes","removedAttr","forEach","nextAttr","name","push","setAttribute","value","removeAttribute","reconciliateAttribute","nextElemChildren","childNodes","node","nextNode","item","textContent","replaceChild","cloneNode","childNode","appendChild","rmElem","removeChild","b","isConnectedPolyfill","Node","defineProperty","get","ownerDocument","compareDocumentPosition","DOCUMENT_POSITION_DISCONNECTED","EventManager","removeUnusedEvents","eventList","event","type","_this","isEventTypeListening","document","addEventListener","dispatchEvent","eventListType","evtList","isEventTarget","callbackFn","eventSingle","dom","filter","evt","isConnected","target","contains","String","startsWith","substr","emptyContext","__root","props","state","cachedMemo","cachedUpdate","indexes","memo","update","renderFunc","SparkyContext","__context","newContext","ReferenceError","__defaultContext","SparkyComponent","render","rootComponent","renderQueue","depthHorizontal","currentRender","shift","this_1","cachedComponent","func","currentFunc","index","currentEvent","element","renderId","elem","eventAttr","children","child","findEvent","eventName","replace","addEvent","currentChild","nestedComponents","currentComp","cached","commentDom","findComment","renderFn","component","getCachedComponent","renderChild","freeze","context","parentNode","componentName","nodeValue","trim","setCurrentContext","Sparky","_DEV_","console","time","resetIndexes","populate","finalDOM","listen","timeEnd","oldNode","newNode","html","_i","computedProps","domNode","createElement","size","id","random","nanoid","newHTML","map","stringHTML","htmlLine","render_1","div","innerHTML","renderSparkyObject","comp","isArray","join","getComputedValue","firstElementChild"],"mappings":"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"}